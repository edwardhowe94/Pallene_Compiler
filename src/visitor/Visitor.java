package visitor;

import syntaxTree.*;
import syntaxTree.expr.binaryexpr.arithop.DIV;
import syntaxTree.expr.binaryexpr.arithop.MINUS;
import syntaxTree.expr.binaryexpr.arithop.PLUS;
import syntaxTree.expr.binaryexpr.arithop.TIMES;
import syntaxTree.expr.binaryexpr.relop.*;
import syntaxTree.expr.constant.*;
import syntaxTree.expr.unaryexpr.MINUS_EXPR;
import syntaxTree.expr.unaryexpr.NOT_EXPR;
import syntaxTree.expr.unaryexpr.SHARP_EXPR;
import syntaxTree.statement.ASSIGNMENT.ASSIGNMENT;
import syntaxTree.statement.ASSIGNMENT.FOR_ASSIGN;
import syntaxTree.statement.ASSIGNMENT.MIX_ASSIGNMENT;
import syntaxTree.statement.Conditional.IF_THEN;
import syntaxTree.statement.Conditional.IF_THEN_ELSE;
import syntaxTree.statement.IO.READ;
import syntaxTree.statement.IO.WRITE;
import syntaxTree.statement.Others.*;
import syntaxTree.type.Primitive;
import syntaxTree.type.Struct;

public interface Visitor {
    //Object visit(Node node);
    Object visit(Def_fun node);
    Object visit(Function node);
    Object visit(VarDecl node);
    Object visit(VarIntValue node);
    Object visit(Stat node);
    Object visit(Global node);
    Object visit(Program node);
    Object visit(ParDecl node);
    Object visit(Expr node);
    Object visit(ASSIGNMENT node);
    Object visit(MIX_ASSIGNMENT node);
    Object visit(IF_THEN node);
    Object visit(IF_THEN_ELSE node);
    Object visit(Statement node);
    Object visit(READ node);
    Object visit(WRITE node);
    Object visit(FOR node);
    Object visit(NOP node);
    Object visit(RETURN node);
    Object visit(WHILE_DO node);
    Object visit(LOCAL node);
    Object visit(ID_STATEMENT node);
    Object visit(Primitive node);
    Object visit(Struct node);
    Object visit(Type node);
    Object visit(DIV node);
    Object visit(MINUS node);
    Object visit(TIMES node);
    Object visit(PLUS node);
    Object visit(AND_R node);
    Object visit(EQ_R node);
    Object visit(GE_R node);
    Object visit(GT_R node);
    Object visit(LE_R node);
    Object visit(LT_R node);
    Object visit(NE_R node);
    Object visit(OR_R node);
    Object visit(BOOLEAN_CONST node);
    Object visit(EXPR_CONST node);
    Object visit(FLOAT_CONST node);
    Object visit(ID node);
    Object visit(FUNCT_EXPR node);
    Object visit(PARAMETERS_F node);
    Object visit(INT_CONST node);
    Object visit(NIL_CONST node);
    Object visit(STRING_CONST node);
    Object visit(TYPE_CONST node);
    Object visit(MINUS_EXPR node);
    Object visit(NOT_EXPR node);
    Object visit(SHARP_EXPR node);
    Object visit(RelopExpr node);
    Object visit(ArithExpr node);
    Object visit(Node node);
    Object visit(ARRAY_STAT node);
    Object visit(FOR_ASSIGN node) ;
}
